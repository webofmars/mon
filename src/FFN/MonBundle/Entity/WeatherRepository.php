<?php

namespace FFN\MonBundle\Entity;

use Doctrine\ORM\EntityRepository;
use FFN\MonBundle\Entity\Weather;

/**
 * WeatherRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WeatherRepository extends EntityRepository
{
    public function findOneByControl($ctrl_id) {
        $em = $this->getEntityManager();

        $query = $em->createQuery('SELECT w FROM FFNMonBundle:Weather w
                                    WHERE w.objectType = :object_type
                                    AND w.refIdObject = :control_id
                                    ORDER BY w.id ASC');

        $query->setParameter('object_type', Weather::OBJECT_TYPE_CONTROL);
        $query->setParameter('control_id', $ctrl_id);
        $query->setMaxResults(1);

        try {
            return $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
                return null;
        }
    }
    
    public function findOneByScenario($sc_id) {
        $em = $this->getEntityManager();

        $query = $em->createQuery('SELECT w FROM FFNMonBundle:Weather w
                                    WHERE w.objectType = :object_type
                                    AND w.refIdObject = :sc_id
                                    ORDER BY w.id ASC');

        $query->setParameter('object_type', Weather::OBJECT_TYPE_SCENARIO);
        $query->setParameter('sc_id', $sc_id);
        $query->setMaxResults(1);

        try {
            return $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
                return null;
        }
    }

    public function findByScenarioIds(Array $ids) {
        $em = $this->getEntityManager();

        $query = $em->createQuery('SELECT w FROM FFNMonBundle:Weather w
                                    WHERE w.objectType = :object_type
                                    AND w.refIdObject IN (:ids)
                                    ORDER BY w.id ASC');

        $query->setParameter('object_type', Weather::OBJECT_TYPE_SCENARIO);
        $query->setParameter('ids', $ids);

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
                return null;
        }
    }
}
